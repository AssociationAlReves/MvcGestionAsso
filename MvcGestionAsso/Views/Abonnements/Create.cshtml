@model MvcGestionAsso.Models.Abonnement
@using Mvc.CascadeDropDown

@{
    ViewBag.Title = "Nouveau";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Abonnement</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2" for="AdherentId">@Html.DisplayNameFor(model => model.AdherentId)</label>
            <div class="col-md-10">
                @Html.DropDownList("AdherentId", null, htmlAttributes: new { @class = "form-control", @autofocus = "autofocus" })
                @Html.ValidationMessageFor(model => model.AdherentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Lieu", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LieuId", null,string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LieuId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Activité", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CascadingDropDownListFor(model => model.ActiviteId, a => a.LieuId, Url.Action("GetActivitesByLieu", "Abonnements"), "lieuId", null, true, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ActiviteId, "", new { @class = "text-danger" })
            </div> 
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="FormuleId">@Html.DisplayNameFor(model => model.FormuleId)</label>
            <div class="col-md-10">
                @*@Html.DropDownList("FormuleId", null, "", htmlAttributes: new { @class = "form-control", @autofocus = "autofocus" })*@
                @Html.CascadingDropDownListFor(model => model.FormuleId, a => a.ActiviteId, Url.Action("GetFormulesByActivite", "Abonnements"), "activiteId", null, true, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FormuleId, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.TypeReglement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.TypeReglement, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeReglement, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Créer" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
